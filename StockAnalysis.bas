
Sub StockAnalysis()Dim i As LongDim j As LongDim dates() As VariantDim rowIndex() As VariantDim ticker As StringDim counter As IntegerDim counter2 As IntegerDim openPrice As DoubleDim closePrice As DoubleDim temp As IntegerDim ws As WorksheetFor Each ws In Worksheets    'Counts the number of rows    LastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row        'Pulls unique tickers and lists them in column i    ws.Range("A1:A" & LastRow).AdvancedFilter Action:=xlFilterCopy, CopyToRange:=ws.Range("I1:I" & LastRow), Unique:=True        'Changes headers in new columns    ws.Cells(1, 9).Value = "Ticker"    ws.Cells(1, 10).Value = "Yearly Change"    ws.Cells(1, 11).Value = "Percent Change"    ws.Cells(1, 12).Value = "Total Stock Volume"        LastUniqueRow = ws.Cells(Rows.Count, 9).End(xlUp).Row        For j = 2 To LastUniqueRow            ticker = ws.Cells(j, 9).Value        counter = 0        temp = 0        openPrice = 0        closePrice = 0        'Counts the number of values per ticker        For i = 2 To LastRow            If ws.Cells(i, 1).Value = ticker Then                counter = counter + 1            End If        Next i            'Creates an array full of dates for each ticker entry and indexes which rows you can find the current ticker        ReDim dates(counter)        ReDim rowIndex(counter)        counter2 = 0            For i = 2 To LastRow            If ws.Cells(i, 1).Value = ticker Then                dates(temp) = ws.Cells(i, 2).Value                rowIndex(temp) = i                temp = temp + 1            End If        Next i            'Determines the opening price on the first day and the closing price on the last day        For i = rowIndex(0) To rowIndex(temp - 1)            If ws.Cells(i, 2).Value = dates(0) Then                openPrice = ws.Cells(i, 3).Value            ElseIf ws.Cells(i, 2).Value = dates(counter - 1) Then                closePrice = ws.Cells(i, 6).Value            End If        Next i            'Calculates yearly change, percent change, and total stock volume then writes it to the appropriate columns        ws.Cells(j, 10).Value = closePrice - openPrice        If (openPrice <> 0) Then            ws.Cells(j, 11).Value = (closePrice - openPrice) / openPrice        End If        ws.Cells(j, 12).Value = Application.Sum(Range(ws.Cells(rowIndex(0), 7), ws.Cells(rowIndex(temp - 1), 7)))                'Applies formats and conditional formatting to resultant cells        If ws.Cells(j, 10).Value > 0 Then            ws.Cells(j, 10).Interior.ColorIndex = 4        ElseIf ws.Cells(j, 10).Value < 0 Then            ws.Cells(j, 10).Interior.ColorIndex = 3        End If                ws.Cells(j, 11).NumberFormat = "0.00%"                Next jNext wsEnd Sub